/*
 * Comprehensive Learner Record Service OpenAPI (YAML) Definition
 *
 * The Comprehensive Learner Record Service enables the exchange of data about users and their achievements between a Comprehensive Learner Record Service Provider and the consumers of the associated data. This service has been described using the IMS Model Driven Specification development approach, this being the Platform Specific Model (PSM) of the service.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: lmattson@imsglobal.org
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace OpenCredentialPublisher.ClrLibrary.Models
{ 
    /// <summary>
    /// An artifact that is part of an evidence object. 
    /// </summary>
    public partial class ArtifactDType
    { 
        /// <summary>
        /// The JSON-LD type of the object. Normally 'Artifact'. Model Primitive Datatype = NormalizedString.
        /// </summary>
        /// <value>The JSON-LD type of the object. Normally 'Artifact'. Model Primitive Datatype = NormalizedString.</value>
        [JsonPropertyName("type"), Newtonsoft.Json.JsonProperty("type")]
        [Description("The JSON-LD type of the object. Normally 'Artifact'. Model Primitive Datatype = NormalizedString.")]
        public string Type { get; set; }
        
        /// <summary>
        /// A description of the artifact. Model Primitive Datatype = String.
        /// </summary>
        /// <value>A description of the artifact. Model Primitive Datatype = String.</value>
        [JsonPropertyName("description"), Newtonsoft.Json.JsonProperty("description")]
        [Description("A description of the artifact. Model Primitive Datatype = String.")]
        public string Description { get; set; }
        
        /// <summary>
        /// The name of the artifact. Model Primitive Datatype = String.
        /// </summary>
        /// <value>The name of the artifact. Model Primitive Datatype = String.</value>
        [JsonPropertyName("name"), Newtonsoft.Json.JsonProperty("name")]
        [Description("The name of the artifact. Model Primitive Datatype = String.")]
        public string Name { get; set; }
        
        /// <summary>
        /// IRI of the artifact. May be a Data URI or the URL where the artifact may be found. Model Primitive Datatype = AnyURI.
        /// </summary>
        /// <value>IRI of the artifact. May be a Data URI or the URL where the artifact may be found. Model Primitive Datatype = AnyURI.</value>
        [JsonPropertyName("url"), Newtonsoft.Json.JsonProperty("url")]
        [Description("IRI of the artifact. May be a Data URI or the URL where the artifact may be found. Model Primitive Datatype = AnyURI.")]
        public string Url { get; set; }

        /// <summary>
        /// Additional properties of the object
        /// </summary>
        [JsonExtensionData]
        [JsonPropertyName("additionalProperties"), Newtonsoft.Json.JsonProperty("additionalProperties")]
        public Dictionary<String, Object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonSerializer.Serialize(this, new JsonSerializerOptions { IgnoreNullValues = true });
        }
    }
}
