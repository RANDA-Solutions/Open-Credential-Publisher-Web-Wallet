/*
 * Comprehensive Learner Record Service OpenAPI (YAML) Definition
 *
 * The Comprehensive Learner Record Service enables the exchange of data about users and their achievements between a Comprehensive Learner Record Service Provider and the consumers of the associated data. This service has been described using the IMS Model Driven Specification development approach, this being the Platform Specific Model (PSM) of the service.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: lmattson@imsglobal.org
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace OpenCredentialPublisher.ClrLibrary.Models
{ 
    /// <summary>
    /// An endorsement claim. 
    /// </summary>
    public partial class EndorsementDType
    { 
        /// <summary>
        /// Globally unique IRI for the Endorsement. If this Endorsement will be verified using Hosted verification, the value should be the URL of the hosted version of the Endorsement. Model Primitive Datatype = NormalizedString.
        /// </summary>
        /// <value>Globally unique IRI for the Endorsement. If this Endorsement will be verified using Hosted verification, the value should be the URL of the hosted version of the Endorsement. Model Primitive Datatype = NormalizedString.</value>
        [Required]
        [JsonPropertyName("id"), Newtonsoft.Json.JsonProperty("id")]
        [Description("Globally unique IRI for the Endorsement. If this Endorsement will be verified using Hosted verification, the value should be the URL of the hosted version of the Endorsement. Model Primitive Datatype = NormalizedString.")]
        public string Id { get; set; }
        
        /// <summary>
        /// The JSON-LD type of this entity. Normally 'Endorsement'. Model Primitive Datatype = NormalizedString.
        /// </summary>
        /// <value>The JSON-LD type of this entity. Normally 'Endorsement'. Model Primitive Datatype = NormalizedString.</value>
        [JsonPropertyName("type"), Newtonsoft.Json.JsonProperty("type")]
        [Description("The JSON-LD type of this entity. Normally 'Endorsement'. Model Primitive Datatype = NormalizedString.")]
        public string Type { get; set; }
        
        /// <summary>
        /// Gets or Sets Claim
        /// </summary>
        [Required]
        [JsonPropertyName("claim"), Newtonsoft.Json.JsonProperty("claim")]
        [Description("Claim")]
        public virtual EndorsementClaimDType Claim { get; set; }
        
        /// <summary>
        /// Timestamp of when the endorsement was published. Model Primitive Datatype = DateTime.
        /// </summary>
        /// <value>Timestamp of when the endorsement was published. Model Primitive Datatype = DateTime.</value>
        [Required]
        [JsonPropertyName("issuedOn"), Newtonsoft.Json.JsonProperty("issuedOn")]
        [Description("Timestamp of when the endorsement was published. Model Primitive Datatype = DateTime.")]
        public DateTime IssuedOn { get; set; }
        
        /// <summary>
        /// Gets or Sets Issuer
        /// </summary>
        [Required]
        [JsonPropertyName("issuer"), Newtonsoft.Json.JsonProperty("issuer")]
        [Description("Issuer")]
        public virtual EndorsementProfileDType Issuer { get; set; }
        
        /// <summary>
        /// If revoked, optional reason for revocation. Model Primitive Datatype = String.
        /// </summary>
        /// <value>If revoked, optional reason for revocation. Model Primitive Datatype = String.</value>
        [JsonPropertyName("revocationReason"), Newtonsoft.Json.JsonProperty("revocationReason")]
        [Description("If revoked, optional reason for revocation. Model Primitive Datatype = String.")]
        public string RevocationReason { get; set; }
        
        /// <summary>
        /// If True the endorsement is revoked. Model Primitive Datatype = Boolean.
        /// </summary>
        /// <value>If True the endorsement is revoked. Model Primitive Datatype = Boolean.</value>
        [JsonPropertyName("revoked"), Newtonsoft.Json.JsonProperty("revoked")]
        [Description("If True the endorsement is revoked. Model Primitive Datatype = Boolean.")]
        public bool? Revoked { get; set; }
        
        /// <summary>
        /// Gets or Sets Verification
        /// </summary>
        [Required]
        [JsonPropertyName("verification"), Newtonsoft.Json.JsonProperty("verification")]
        [Description("Verification")]
        public virtual VerificationDType Verification { get; set; }

        /// <summary>
        /// Additional properties of the object
        /// </summary>
        [JsonExtensionData]
        [JsonPropertyName("additionalProperties"), Newtonsoft.Json.JsonProperty("additionalProperties")]
        public Dictionary<string, object> AdditionalProperties { get; set; } = new Dictionary<string, object>();

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonSerializer.Serialize(this, new JsonSerializerOptions { IgnoreNullValues = true });
        }
    }
}
