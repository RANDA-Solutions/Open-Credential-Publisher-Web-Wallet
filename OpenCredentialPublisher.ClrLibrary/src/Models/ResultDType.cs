/*
 * Comprehensive Learner Record Service OpenAPI (YAML) Definition
 *
 * The Comprehensive Learner Record Service enables the exchange of data about users and their achievements between a Comprehensive Learner Record Service Provider and the consumers of the associated data. This service has been described using the IMS Model Driven Specification development approach, this being the Platform Specific Model (PSM) of the service.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: lmattson@imsglobal.org
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace OpenCredentialPublisher.ClrLibrary.Models
{
    /// <summary>
    /// Describes a result of an achievement. 
    /// </summary>
    public partial class ResultDType
    { 
        /// <summary>
        /// Unique IRI for the object. Model Primitive Datatype = NormalizedString.
        /// </summary>
        /// <value>Unique IRI for the object. Model Primitive Datatype = NormalizedString.</value>
        [JsonPropertyName("id"), Newtonsoft.Json.JsonProperty("id")]
        [Description("Unique IRI for the object. Model Primitive Datatype = NormalizedString.")]
        public string Id { get; set; }
        
        /// <summary>
        /// The JSON-LD type of this object. Normally 'Result'. Model Primitive Datatype = NormalizedString.
        /// </summary>
        /// <value>The JSON-LD type of this object. Normally 'Result'. Model Primitive Datatype = NormalizedString.</value>
        [JsonPropertyName("type"), Newtonsoft.Json.JsonProperty("type")]
        [Description("The JSON-LD type of this object. Normally 'Result'. Model Primitive Datatype = NormalizedString.")]
        public string Type { get; set; }
        
        /// <summary>
        /// The id of the RubricCriterionLevel achieved. Model Primitive Datatype = NormalizedString.
        /// </summary>
        /// <value>The id of the RubricCriterionLevel achieved. Model Primitive Datatype = NormalizedString.</value>
        [JsonPropertyName("achievedLevel"), Newtonsoft.Json.JsonProperty("achievedLevel")]
        [Description("The id of the RubricCriterionLevel achieved. Model Primitive Datatype = NormalizedString.")]
        public string AchievedLevel { get; set; }
        
        /// <summary>
        /// The alignments between this result and nodes in external frameworks. This set of alignments are in addition to the set of alignments defined in the corresponding ResultDescription object. 
        /// </summary>
        /// <value>The alignments between this result and nodes in external frameworks. This set of alignments are in addition to the set of alignments defined in the corresponding ResultDescription object. </value>
        [JsonPropertyName("alignments"), Newtonsoft.Json.JsonProperty("alignments")]
        [Description("The alignments between this result and nodes in external frameworks. This set of alignments are in addition to the set of alignments defined in the corresponding ResultDescription object. ")]
        public virtual List<AlignmentDType> Alignments { get; set; }
        
        /// <summary>
        /// The id of the ResultDescription describing this result. Model Primitive Datatype = NormalizedString.
        /// </summary>
        /// <value>The id of the ResultDescription describing this result. Model Primitive Datatype = NormalizedString.</value>
        [Required]
        [JsonPropertyName("resultDescription"), Newtonsoft.Json.JsonProperty("resultDescription")]
        [Description("The id of the ResultDescription describing this result. Model Primitive Datatype = NormalizedString.")]
        public string ResultDescription { get; set; }

        [JsonPropertyName("status"), Newtonsoft.Json.JsonProperty("status")]
        [Description("The status of the achievement. Required if 'ResultType' is 'Status'. Enumerated value set of: { Completed | Enrolled | Failed | InProgress | OnHold | Withdrew }")]
        public string Status { get; set; }

        /// <summary>
        /// A grade or value representing the result of the performance, or demonstration, of the achievement.  For example, 'A' if the recipient received a grade of A in the class.  Model Primitive Datatype = String.
        /// </summary>
        /// <value>A grade or value representing the result of the performance, or demonstration, of the achievement.  For example, 'A' if the recipient received a grade of A in the class.  Model Primitive Datatype = String.</value>
        [JsonPropertyName("value"), Newtonsoft.Json.JsonProperty("value")]
        [Description("A grade or value representing the result of the performance, or demonstration, of the achievement.  For example, 'A' if the recipient received a grade of A in the class.  Model Primitive Datatype = String.")]
        public string Value { get; set; }

        /// <summary>
        /// Additional properties of the object
        /// </summary>
        [JsonExtensionData]
        [JsonPropertyName("additionalProperties"), Newtonsoft.Json.JsonProperty("additionalProperties")]
        public Dictionary<String, Object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonSerializer.Serialize(this, new JsonSerializerOptions { IgnoreNullValues = true });
        }
    }
}
