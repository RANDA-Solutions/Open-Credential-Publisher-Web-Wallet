/*
 * Comprehensive Learner Record Service OpenAPI (YAML) Definition
 *
 * The Comprehensive Learner Record Service enables the exchange of data about users and their achievements between a Comprehensive Learner Record Service Provider and the consumers of the associated data. This service has been described using the IMS Model Driven Specification development approach, this being the Platform Specific Model (PSM) of the service.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: lmattson@imsglobal.org
 * Generated by: https://openapi-generator.tech
 */

using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using System.Text.Json.Serialization;
using OpenCredentialPublisher.ClrLibrary.Converters;
// ReSharper disable UnusedMember.Global

namespace OpenCredentialPublisher.ClrLibrary.Models
{ 
    /// <summary>
    /// This is the container for a single code minor status code. 
    /// </summary>
    public class ImsxCodeMinorFieldDType
    { 
        /// <summary>
        /// This should contain the identity of the system that has produced the code minor status code report. Model Primitive Datatype = NormalizedString.
        /// </summary>
        /// <value>This should contain the identity of the system that has produced the code minor status code report. Model Primitive Datatype = NormalizedString.</value>
        [Required]
        [JsonPropertyName("imsx_codeMinorFieldName"), Newtonsoft.Json.JsonProperty("imsx_codeMinorFieldName")]
        [Description("Tiis should contain the identity of the system that has produced the code minor status code report. Model Primitive Datatype = NormalizedString.")]
        public string ImsxCodeMinorFieldName { get; set; }
        
        /// <summary>
        /// The code minor status code (this is a value from the corresponding enumerated vocabulary). 
        /// </summary>
        /// <value>The code minor status code (this is a value from the corresponding enumerated vocabulary). </value>
        [TypeConverter(typeof(Converters.Newtonsoft.CustomEnumConverter<ImsxCodeMinorFieldValueEnum>))]
        [JsonConverter(typeof(Converters.Json.StringEnumConverter<ImsxCodeMinorFieldValueEnum>))]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ImsxCodeMinorFieldValueEnum
        {
            
            /// <summary>
            /// Enum ForbiddenEnum for forbidden
            /// </summary>
            [EnumMember(Value = "forbidden")]
            ForbiddenEnum = 1,
            
            /// <summary>
            /// Enum FullsuccessEnum for fullsuccess
            /// </summary>
            [EnumMember(Value = "fullsuccess")]
            FullsuccessEnum = 2,
            
            /// <summary>
            /// Enum InternalServerErrorEnum for internal_server_error
            /// </summary>
            [EnumMember(Value = "internal_server_error")]
            InternalServerErrorEnum = 3,
            
            /// <summary>
            /// Enum InvalidDataEnum for invalid_data
            /// </summary>
            [EnumMember(Value = "invalid_data")]
            InvalidDataEnum = 4,
            
            /// <summary>
            /// Enum InvalidQueryParameterEnum for invalid_query_parameter
            /// </summary>
            [EnumMember(Value = "invalid_query_parameter")]
            InvalidQueryParameterEnum = 5,
            
            /// <summary>
            /// Enum ServerBusyEnum for server_busy
            /// </summary>
            [EnumMember(Value = "server_busy")]
            ServerBusyEnum = 6,
            
            /// <summary>
            /// Enum UnauthorizedrequestEnum for unauthorizedrequest
            /// </summary>
            [EnumMember(Value = "unauthorizedrequest")]
            UnauthorizedrequestEnum = 7
        }

        /// <summary>
        /// The code minor status code (this is a value from the corresponding enumerated vocabulary). 
        /// </summary>
        /// <value>The code minor status code (this is a value from the corresponding enumerated vocabulary). </value>
        [Required]
        [JsonPropertyName("imsx_codeMinorFieldValue"), Newtonsoft.Json.JsonProperty("imsx_codeMinorFieldValue")]
        [Description("The code minor status code (this is a value from the corresponding enumerated vocabulary). ")]
        public ImsxCodeMinorFieldValueEnum ImsxCodeMinorFieldValue { get; set; }
        
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonSerializer.Serialize(this, new JsonSerializerOptions { IgnoreNullValues = true });
        }
    }
}
