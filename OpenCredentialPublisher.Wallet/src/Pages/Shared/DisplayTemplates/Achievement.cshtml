@using OpenCredentialPublisher.ClrLibrary.Models
@using OpenCredentialPublisher.ClrWallet.Extensions
@using Microsoft.AspNetCore.Mvc.Rendering
@using OpenCredentialPublisher.ClrLibrary.Extensions
@model AchievementDType

<div class="mt-3 mb-3">
    <div class="card">
        <button class="card-header h5 text-left" id="achievementHeader-@Model.Id.SafeId()" data-toggle="collapse" data-target="#achievementBody-@Model.Id.SafeId()">
            @Html.Raw(Model.HumanCode != null ? Model.HumanCode + ": " + Model.Name : Model.Name)
        </button>
        <div id="achievementBody-@Model.Id.SafeId()" class="collapse">
            <div class="card-body card-deck">
                @if (Model.Image != null)
                {
                    <div class="card border-0" style="max-width: 100px">
                        <img src="@Model.Image" style="max-width: 100px" />
                    </div>
                }
                <div class="card border-0">
                    <dl class="row">
                        @if (Model.CreditsAvailable.HasValue)
                        {
                            <dt class="col-12 col-sm-4 col-md-3">Credits Available</dt>
                            <dd class="col-12 col-sm-8 col-md-9">@Model.CreditsAvailable</dd>
                        }
                        @if (Model.Description != null)
                        {
                            <dt class="col-12 col-sm-4 col-md-3">Description</dt>
                            <dd class="col-12 col-sm-8 col-md-9">@Html.Raw(Model.Description)</dd>
                        }
                        @if (Model.FieldOfStudy != null)
                        {
                            <dt class="col-12 col-sm-4 col-md-3">Field of Study</dt>
                            <dd class="col-12 col-sm-8 col-md-9">@Model.FieldOfStudy</dd>
                        }
                        @if (Model.HumanCode != null)
                        {
                            <dt class="col-12 col-sm-4 col-md-3">Human Code</dt>
                            <dd class="col-12 col-sm-8 col-md-9">@Model.HumanCode</dd>
                        }
                        @if (Model.Level != null)
                        {
                            <dt class="col-12 col-sm-4 col-md-3">Level</dt>
                            <dd class="col-12 col-sm-8 col-md-9">@Model.Level</dd>
                        }
                        @if (Model.Requirement != null)
                        {
                            <dt class="col-12 col-sm-4 col-md-3">Requirement</dt>
                            <dd class="col-12 col-sm-8 col-md-9 markdown">@Model.Requirement.Narrative</dd>
                        }
                        @if (Model.Specialization != null)
                        {
                            <dt class="col-12 col-sm-4 col-md-3">Specialization</dt>
                            <dd class="col-12 col-sm-8 col-md-9">@Model.Specialization</dd>
                        }
                        @if (Model.Tags != null)
                        {
                            <dt class="col-12 col-sm-4 col-md-3">Tags</dt>
                            <dd class="col-12 col-sm-8 col-md-9">@string.Join(", ", Model.Tags)</dd>
                        }
                        @{
                            var achievementTypes = "<div>Achievement</div>" +
                                         "<div>Assessment Result</div>" +
                                         "<div>Award</div>" +
                                         "<div>Badge</div>" +
                                         "<div>Certificate</div>" +
                                         "<div>Certification</div>" +
                                         "<div>Course</div>" +
                                         "<div>Community Service</div>" +
                                         "<div>Competency</div>" +
                                         "<div>Co-Curricular</div>" +
                                         "<div>Degree</div>" +
                                         "<div>Diploma</div>" +
                                         "<div>Fieldwork</div>" +
                                         "<div>License</div>" +
                                         "<div>Membership</div>";
                        }

                        <dt class="col-12 col-sm-4 col-md-3">
                            Type
                            <img src="~/images/noun_Info_742307.svg" style="width: 1.5em" alt="Info"
                                 data-toggle="tooltip" data-html="true" title="@achievementTypes" />
                        </dt>
                        <dd class="col-12 col-sm-8 col-md-9">@Model.AchievementType</dd>
                    </dl>
                </div>
            </div>

            @if (Model.Issuer != null)
            {
                <div class="card">
                    <button class="card-header" id="achievementIssuerHeader-@Model.Id.SafeId()" data-toggle="collapse" data-target="#achievementIssuerBody-@Model.Id.SafeId()">
                        Issuer
                    </button>
                    <div id="achievementIssuerBody-@Model.Id.SafeId()" class="collapse">
                        <div class="card-body card-deck">
                            <div class="card border-0">
                                @Html.DisplayFor(m => Model.Issuer, "Profile", new { ClrEntityId = ViewData["ClrEntityId"], ProfileType = "Issuer"})
                            </div>
                            <div class="card border-0">
                                @Html.DisplayFor(m => Model.Issuer.PublicKey, "PublicKey")
                                @Html.DisplayFor(m => Model.Issuer.Verification, "Verification")
                            </div>
                        </div>
                    </div>
                </div>
            }

            @* Result Descriptions *@

            @if (Model.ResultDescriptions != null && Model.ResultDescriptions.Any())
            {
                <div class="card">
                    <button class="card-header" id="resultDescriptionsHeader-@Model.Id.SafeId()" data-toggle="collapse" data-target="#resultDescriptionBody-@Model.Id.SafeId()">
                        Result Descriptions
                    </button>
                    <div id="resultDescriptionBody-@Model.Id.SafeId()" class="collapse">
                        <div class="card-body card-deck">
                                <div class="card border-0">
                                    <h6>
                                        Result Descriptions
                                    </h6>
                                    <ul class="list-group">
                                        @foreach (var resultDescription in Model.ResultDescriptions)
                                        {
                                            <li class="list-group-item">
                                                <dl class="row">
                                                    <dt class="col-12 col-sm-4 col-md-3">Name</dt>
                                                    <dd class="col-12 col-sm-8 col-md-9">@resultDescription.Name</dd>
                                                    <dt class="col-12 col-sm-4 col-md-3">Type</dt>
                                                    <dd class="col-12 col-sm-8 col-md-9">@resultDescription.ResultType</dd>
                                                    @if (resultDescription.AllowedValues != null)
                                                    {
                                                        <dt class="col-12 col-sm-4 col-md-3">Allowed</dt>
                                                        <dd class="col-12 col-sm-8 col-md-9">@string.Join(", ", resultDescription.AllowedValues)</dd>
                                                    }
                                                    @if (resultDescription.ValueMin != null)
                                                    {
                                                        <dt class="col-12 col-sm-4 col-md-3">Min</dt>
                                                        <dd class="col-12 col-sm-8 col-md-9">@resultDescription.ValueMin</dd>
                                                    }
                                                    @if (resultDescription.ValueMax != null)
                                                    {
                                                        <dt class="col-12 col-sm-4 col-md-3">Max</dt>
                                                        <dd class="col-12 col-sm-8 col-md-9">@resultDescription.ValueMax</dd>
                                                    }
                                                </dl>
                                            </li>
                                        }
                                    </ul>
                                </div>
                        </div>
                    </div>
                </div>
            }

            @* Endorsements *@

            @{
                var endorsements = new List<EndorsementDType>();
                if (Model.Endorsements != null)
                {
                    endorsements.AddRange(Model.Endorsements);
                }
                if (Model.SignedEndorsements != null)
                {
                    endorsements.AddRange(Model.SignedEndorsements.Select(e => e.DeserializePayload<EndorsementDType>()));
                }
                endorsements = endorsements.OrderBy(e => e.IssuedOn).ToList();
            }

            @if (endorsements.Any())
            {
                <div class="card">
                    <button class="card-header" id="endorsementHeader-@Model.Id.SafeId()" data-toggle="collapse" data-target="#endorsementBody-@Model.Id.SafeId()">
                        Endorsements
                    </button>
                    <div id="endorsementBody-@Model.Id.SafeId()" class="collapse">
                        <div class="card-body">
                            <ul class="list-group">
                                @foreach (var endorsement in endorsements)
                                {
                                    @Html.DisplayFor(m => endorsement, "Endorsement", new { ClrEntityId = ViewData["ClrEntityId"] })
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }

            @* Alignments *@

            @if (Model.Alignments != null && Model.Alignments.Any())
            {
                <div class="card">
                    <button class="card-header" id="achievementAlignmentsHeader-@Model.Id.SafeId()" data-toggle="collapse" data-target="#achievementAlignmentsBody-@Model.Id.SafeId()">
                        Alignments
                    </button>
                    <div id="achievementAlignmentsBody-@Model.Id.SafeId()" class="collapse">
                        <div class="card-body">
                            <ul class="list-group">
                                @foreach (var alignment in Model.Alignments)
                                {
                                    <li class="list-group-item">
                                        <dl class="row">
                                            <dt class="col-sm-2">Framework</dt>
                                            <dd class="col-sm-10">@alignment.EducationalFramework</dd>
                                            <dt class="col-sm-2">Type</dt>
                                            <dd class="col-sm-10">@alignment.TargetType</dd>
                                            <dt class="col-sm-2">Name</dt>
                                            <dd class="col-sm-10">
                                                <a href="@alignment.TargetUrl" target="_blank">@alignment.TargetName</a>
                                            </dd>
                                            <dt class="col-sm-2">Description</dt>
                                            <dd class="col-sm-10">@alignment.TargetDescription</dd>
                                        </dl>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }

            @* Associations *@

            @if (Model.Associations != null && Model.Associations.Any())
            {
                <div class="card">
                    <button class="card-header" id="achievementAssociationsHeader-@Model.Id.SafeId()" data-toggle="collapse" data-target="#achievementAssociationsBody-@Model.Id.SafeId()">
                        Associations
                    </button>
                    <div id="achievementAssociationsBody-@Model.Id.SafeId()" class="collapse">
                        <div class="card-body">
                            <ul class="list-group">
                                @foreach (var association in Model.Associations)
                                {
                                    <li class="list-group-item">
                                        This achievement
                                        <span style="font-style: italic">
                                            @association.AssociationType.ToEnumMemberValue()
                                        </span>
                                        <span style="font-weight: bold">
                                            @association.Title
                                        </span>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }

            @* Additional Properties *@

            @if (Model.AdditionalProperties != null && Model.AdditionalProperties.Any())
            {
                <div class="card">
                    <button class="card-header" id="achievementAdditionalPropertiesHeader-@Model.Id.SafeId()" data-toggle="collapse" data-target="#achievementAdditionalPropertiesBody-@Model.Id.SafeId()">
                        Additional Properties
                    </button>
                    <div id="achievementAdditionalPropertiesBody-@Model.Id.SafeId()" class="collapse">
                        <div class="card-body card-deck">
                            <div class="card border-0">
                                <h6>Additional Properties</h6>
                                @if (Model.AdditionalProperties != null)
                                {
                                    <dl class="row">
                                        @foreach (var key in Model.AdditionalProperties.Keys)
                                        {
                                            <dt class="col-12 col-sm-4 col-md-3">@key</dt>
                                            <dd class="col-12 col-sm-8 col-md-9">@Model.AdditionalProperties[key]</dd>
                                        }
                                    </dl>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>