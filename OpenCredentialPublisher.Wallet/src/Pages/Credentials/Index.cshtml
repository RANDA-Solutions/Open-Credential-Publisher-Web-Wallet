@page "{handler?}"
@using OpenCredentialPublisher.Wallet.Extensions;
@using OpenCredentialPublisher.Data.ViewModels.Credentials;
@model OpenCredentialPublisher.ClrWallet.Pages.Clrs.IndexModel
@{
    ViewData["Title"] = "CLRs";

    string PackageType(PackageTypeEnum packageType) =>
        packageType switch
        {
            PackageTypeEnum.Clr => "CLR",
            PackageTypeEnum.ClrSet => "CLRSet",
            PackageTypeEnum.VerifiableCredential => "VerifiableCredential",
            PackageTypeEnum.OpenBadge => "Backpack"
        };

}


@*
    <link rel="stylesheet" href="~/lib/font-awesome/css/fontawesome.css" />
    <link rel="stylesheet" href="~/lib/font-awesome/css/solid.css" />
    <link rel="stylesheet" href="~/lib/font-awesome/css/brands.css" />
*@

<div class="row align-items-sm-end mt-5">
    <div class="col-12 col-sm-6 col-md col-lg col-xl mb-3 mb-sm-0">
        <div class="profile-container">
            <div class="profile-picture-container">
                <div class="profile-picture-circle text-center">
                    @if (Model.Profile.HasProfileImage)
                    {
                        <img src="@Model.Profile.ProfileImageUrl" alt="Profile Picture" />
                    }
                    else
                    {
                        <div class="profile-picture-link-container">
                            <a asp-page="/Account/Manage/ProfileImage">
                                SET<br />
                                PICTURE
                            </a>
                        </div>
                    }
                </div>
            </div>

            <div class="profile-body">
                <div class="pencil-container"><a asp-page="/Account/Manage/Index"><span class="pencil-icon"></span></a></div>
                @if (Model.Profile.MissingDisplayName)
                {
                    <div class="profile-name text-center">
                        <a asp-page="/Account/Manage/Index">Set Display Name</a>
                    </div>
                }
                else
                {
                    <div class="profile-name text-wrap"><abbr>@Model.Profile.DisplayName</abbr></div>
                }
                <div class="row row-cols-2">
                    <div class="col profile-stats stats-border">@Model.Profile.Achievements</div>
                    <div class="col profile-stats">@Model.Profile.Credentials</div>
                    <div class="col stats-label stats-border">ACHIEVEMENTS</div>
                    <div class="col stats-label">
                        CREDENTIALS
                    </div>
                </div>
                <div class="row row-cols-1 mt-3">
                    <div class="col profile-stats">@Model.Profile.ActiveLinks</div>
                    <div class="col stats-label">
                        LINKS
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-md-6 col-lg-7 col-xl-8 mb-3 mb-sm-0">
        <div class="dashboard-container">
            <div class="row">
                <div class="col">
                    <div class="dashboard-title">DASHBOARD</div>
                </div>
            </div>
            <div class="row credential-row">
                <div class="col-12 col-sm col-lg-8 d-lg-block">
                    <p class="lead">
                        Congratulations! <br /> You’ve published a credential.
                    </p>
                    <p>
                        Send your credential using the “Share” feature below. <br>
                        Connect a mobile wallet to send your credential. <br><br />
                        Supported Wallets:
                    </p>
                    <ul class="list-unstyled">
                        <li class="mb-3">
                            <a href="https://www.connect.me" target="_blank"><img src="/images/connect-me-logo.svg" style="height: 27.25px;"></a>
                        </li>
                        <li>
                            <a href="https://idramp.com/passport-identity-wallet/" target="_blank"><img src="/images/idramp-passport-logo.png" style="height: 40px"></a>
                        </li>
                    </ul>
                    <p>
                        Learn more about digital wallets here. [live link]
                    </p>
                </div>
                <div class="col-12 col-sm">
                    @if (Model.Dashboard.ShowNewestPdfTranscript || Model.Dashboard.ShowShareableLinksSection)
                    {
                        <h5 class="dashboard-section-title">Highlights</h5>
                        @if (Model.Dashboard.ShowNewestPdfTranscript)
                        {
                            var pdf = Model.Dashboard.NewestPdfTranscript;
                            <div class="highlights-group mt-3">
                                <h6>Latest Transcript</h6>
                                <p class="font-weight-lighter">From @pdf.ClrVM.Clr.Name issued on @pdf.ClrVM.Clr.IssuedOn.ToString("d").</p>
                                <div class="">
                                    <button type="button" name="view-pdf-button" data-name="@pdf.EvidenceName" data-clrid="@pdf.ClrId" data-assertionid="@pdf.AssertionId" data-artifactid="@pdf.ArtifactId" class="btn btn-outline-primary btn-lg" title="DOWNLOAD @pdf.ArtifactName">DOWNLOAD</button>
                                </div>
                            </div>
                        }
                        @if (Model.Dashboard.ShowShareableLinksSection)
                        {
                            <div class="highlights-group mt-3">
                                <h6>Shareable Credential</h6>

                                @*@if (Model.Dashboard.ShowLatestShareableLink)
                                {
                                    var link = Model.Dashboard.LatestShareableLink;

                                    <div class="highlights-group-button">
                                        <a class="btn btn-outline-primary btn-lg" title="View Shareable Credential" href="@Model.GetLinkUrl(link.Id)">VIEW</a>
                                    </div>
                                }*@
                                <div class="highlights-group-button mt-3">
                                    <a class="btn btn-outline-primary btn-lg" title="Share Credential" asp-page="/Links/Create">SHARE</a>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-0 mt-sm-3">
    <div class="col">
        <div class="credentials-container p-5">
            <div class="row justify-content-end">
                <div class="col-12 col-md-4">
                    <h4 class="text-center">Credentials</h4>
                </div>
                <div class="col-12 col-md-4 text-right">
                    <button type="button" class="btn btn-lg btn-outline-primary d-none">CREATE FOLIO</button>
                </div>
            </div>

            <div asp-validation-summary="ModelOnly" class="alert alert-danger mt-2"></div>

            @if (Model.EnableSource || Model.EnableCollections)
            {
                <p>
                    @if (Model.EnableSource)
                    {
                        <a asp-page="/Sources/Index">Connect to a source</a>
                    }
                    @if (Model.EnableCollections)
                    {
                        <a asp-page="./Create">Create a collection</a>
                    }
                </p>
            }
            <p>
                <a class="btn btn-link @(Model.CredentialPackageVMs.Count == 0 ? "disabled" : "")" asp-page="/Links/Index">Manage your shared credentials</a>
            </p>

            @if (Model.CredentialPackageVMs.Count == 0)
            {
                <div class="card text-white bg-info mb-4">
                    <div class="card-body">
                        <div class="card-text">
                            Connect to a source or upload a VC/CLR file you received directly from a publisher.
                        </div>
                    </div>
                </div>}
            else
            {
                foreach (var package in Model.CredentialPackageVMs)
                {
                    await RenderCredentialSection(package);
                }
            }
        </div>
    </div>
</div>

<div class="row mt-5">
    <div class="col">
        <div class="upload-container p-5">
            <form method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label asp-for="ClrUpload" class="control-label"></label>
                    <div class="input-group mb-3">
                        <div class="custom-file">
                            <input type="file" asp-for="ClrUpload" class="custom-file-input" id="inputGroupFile01" aria-describedby="inputGroupFileAddon01">
                            <label class="custom-file-label" for="inputGroupFile01">Choose CLR</label>
                        </div>
                    </div>
                    <span asp-validation-for="ClrUpload" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <button type="submit" asp-page-handler="Upload" class="btn btn-outline-primary btn-lg float-right">UPLOAD</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="modal-assertion-details" class="modal" role="dialog" style="font-size:13px;">
    <div class="modal-dialog">
        <div class="modal-content" style="padding-bottom:60px;">
            <div class="modal-header" style="border-bottom:none;">
                <span aria-hidden="true" class="remove-button-icon" data-dismiss="modal" style="margin-top:9px;cursor:pointer"></span>

                <h5 class="modal-title"></h5>
                <button type="button" class="btn btn-lg btn-outline-primary" data-dismiss="modal" aria-label="Verify">
                    <span aria-hidden="true">Verify</span>
                </button>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>

@functions {

    List<T> Combine<T>(params List<T>[] lists)
    {
        var list = new List<T>();
        foreach (var l in lists)
            list.AddRange(l);
        return list;
    }

    private async Task RenderCredentialSection(CredentialPackageViewModel packageVM)
    {
        var clrVMs = packageVM.CredentialPackage.TypeId switch
        {
            PackageTypeEnum.VerifiableCredential => Combine(packageVM.VerifiableCredentialVM.ClrVMs, packageVM.VerifiableCredentialVM.ClrSetVMs.SelectMany(c => c.ClrVMs).ToList()),
            PackageTypeEnum.ClrSet => packageVM.ClrSetVM.ClrVMs,
            PackageTypeEnum.Clr => new List<ClrViewModel> { { packageVM.ClrVM } },
            PackageTypeEnum.OpenBadge => new List<ClrViewModel> { { packageVM.ClrVM } }
        };

        var totalAssertions = clrVMs.Sum(clr => clr.AllAssertions.Count);
        <div class="row credential-row mb-3">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col">
                                @totalAssertions ASSERTIONS
                            </div>
                            <div class="col text-right">
                                ADDED ON @packageVM.CredentialPackage.CreatedAt.ToLocalTime().ToString("G")
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (packageVM.CredentialPackage.TypeId == PackageTypeEnum.VerifiableCredential)
                        {
                            foreach (var clrVM in packageVM.VerifiableCredentialVM.AllClrs)
                            {
                                await RenderClrSection(clrVM);
                            }
                        }
                        else if (packageVM.CredentialPackage.TypeId == PackageTypeEnum.ClrSet)
                        {
                            foreach (var clrVM in packageVM.ClrSetVM.ClrVMs)
                            {
                                await RenderClrSection(clrVM);
                            }
                        }
                        else if (packageVM.CredentialPackage.TypeId == PackageTypeEnum.Clr)
                        {
                            await RenderClrSection(packageVM.ClrVM);
                        }
                        else if (packageVM.CredentialPackage.TypeId == PackageTypeEnum.OpenBadge)
                        {
                            await RenderBadgrSection(packageVM.ClrVM);
                        }
                    </div>
                </div>
            </div>

        </div> }
    private async Task RenderBadgrSection(ClrViewModel clrVM)
    {
        <section class="clr-section">
            <div id="clr-@clrVM.Clr.Id" class="card-section-body">
                <div class="row">
                    @foreach (var assertion in clrVM.AllAssertions)
                    {
                        <partial name="_BadgrAssertionDetails" model="assertion" />
                    }
                </div>
            </div>
        </section>
    }

    private async Task RenderClrSection(ClrViewModel clrVM)
    {
        <section class="clr-section">
            <div class="card-section-header cursor">
                <div class="row">
                    <div class="col-12 col-md-4 col-lg-6 order-first">
                        <span class="align-middle d-inline expand-button-icon mr-2"></span>

                        <span class="h6 d-inline-flex">
                            @if (clrVM.Clr.IsRevoked)
                            {
                                <span class="alert-danger">REVOKED</span>
                            }
                            @clrVM.Clr.Name - @clrVM.RawClrDType.Publisher.Name
                        </span>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2 order-md-2 order-last text-center">
                        <a class="font-18" asp-page="/Credentials/Display" asp-route-id="@clrVM.Clr.CredentialPackageId">
                            Details
                        </a>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2 text-right order-xs-1 order-md-3">ISSUED ON</div>
                    <div class="col-4 col-md-2 order-xs-2 order-md-4">
                        <b>@clrVM.Clr.IssuedOn.ToString("MM/dd/yyyy", System.Globalization.CultureInfo.CreateSpecificCulture("de-DE"))</b>
                    </div>
                </div>
            </div>
            <div id="clr-@clrVM.Clr.Id" class="card-section-body collapsed">
                @foreach (var assertion in clrVM.AllAssertions)
                {
                    <partial name="_AssertionDetails" model="assertion" />
                }
            </div>
        </section>
    }

    private async Task RenderClrRow(ClrModel clr)
    {
        <tr>
            <td class="align-middle">
                @if (clr.Authorization == null)
                {
                    <img src="~/images/noun_File_1909649.svg" style="height: 1.5em;"
                         title="Uploaded on @clr.RefreshedAt.ToShortDateString()." />
                }
                else
                {
                    <form method="post">
                        <button type="submit" asp-page-handler="Refresh" asp-route-id="@clr.Authorization.Id"
                                class="btn p-0" title="Last retrieved on @clr.RefreshedAt.ToShortDateString(). Click to refresh all CLRs from @clr.Authorization.Source.Name.">
                            <img src="~/images/noun_Data_942487.svg" style="height: 1.5em;" />
                        </button>
                    </form>
                }
            </td>
            <td class="align-middle">@clr.PublisherName</td>
            <td class="align-middle">@clr.IssuedOn.ToShortDateString()</td>
            <td class="align-middle">@clr.Name</td>
            <td class="align-middle text-center">@clr.AssertionsCount</td>
            <td class="align-middle">
                <form method="post">
                    <a asp-page="./Display" asp-route-id="@clr.CredentialPackageId">Display</a> |
                    <a asp-page="./Delete" asp-route-id="@clr.Id">Delete</a> |
                    <input type="hidden" name="id" value="@clr.Id" />
                    <button type="submit" asp-page-handler="Download" class="btn btn-link btn-download p-0 align-baseline">Download</button>
                </form>
            </td>
        </tr>}
}

@section Scripts {
    <script src="~/lib/bootstrap-custom-file-input/dist/bs-custom-file-input.min.js"></script>
    <script>
        $(function () {
            bsCustomFileInput.init();
        });
    </script>

    <script>

        $(".modal-dialog").css("width", "60%");
        $(".card-section-header").on("click", function (event) {
            if (event.target.tagName === 'A') return;
            $(".expand-button-icon", this).toggleClass("collapsed");
            $(this).next(".card-section-body").toggleClass("collapsed");
        });

        $(".assertion-header").on("click", function (c) {

            $(this).parent().next(".assertion-info").toggleClass("collapsed");
            var item = $($(this).children().children("span")[0].firstChild);
            item.toggleClass("fa-angle-right", "fa-angle-down");
            item.toggleClass("fa-angle-down", "fa-angle-right");

        });

        $(".assertion-row").on("click", function () {
            var name = $(this).data("name");
            var i = $(this).parent().parent().next(".assertion-details").html();
            $("#modal-assertion-details").find(".modal-title").html(name);
            $("#modal-assertion-details").find(".modal-body").html(i);
            $("#modal-assertion-details").modal("show");
        });

        $("button[name='view-pdf-button']").on("click", async (event) => {
            var target = $(event.currentTarget);
            var clrId = $(target).data("clrid");
            var name = $(target).data("name");
            var assertionId = $(target).data("assertionid");
            var artifactId = $(target).data("artifactid");
            const dataWindow = window.open("", "_blank");
            var dataUrl = await getPdfDataUrl(clrId, assertionId, artifactId, name).catch(e => console.log(e));
            dataWindow.document.body.innerHTML =
                `<iframe width='100%' height='100%' src='${dataUrl}'></iframe>`;
        });

        async function getPdfDataUrl(clrId, assertionId, artifactId, evidenceName) {
            var response = await $.get('/credentials/pdf',
                {
                    clrId: clrId,
                    assertionId: assertionId,
                    artifactId: artifactId,
                    evidenceName: evidenceName
                }
            );
            if (response.dataUrl) {
                return response.dataUrl;
            }
            throw new Error("Could not download the PDF.");
        }

        function exportToView(dataUrl) {
            const dataWindow = window.open("", "_blank");
            dataWindow.document.body.innerHTML =
                `<iframe width='100%' height='100%' src='${dataUrl}'></iframe>`;
            dataWindow.document.close();
        }
    </script>
}